# Default configuration

# Server settings
server_addr = "127.0.0.1:3111"
# JWT settings (Example - replace with actual secrets)
jwt_secret = "your-super-secret-jwt-key"

# CORS settings (Example - adjust for your frontend origin)
allowed_origin = "http://localhost:5173"

# Database configurations (Example - adjust as needed)
[[databases]]
name = "users"
type = "postgres"
conn_string = "postgres://postgres:postgres@localhost:5432/r2-data-2-users"

[[databases]]
name = "employees"
type = "postgres"
conn_string = "postgres://postgres:postgres@localhost:5432/employees"

[[databases]]
name = "lego"
type = "postgres"
conn_string = "postgres://postgres:postgres@localhost:5432/lego"

[[databases]]
name = "wikipedia"
type = "postgres"
conn_string = "postgres://postgres:postgres@localhost:5432/wikipedia"

# --- New Database Type Examples ---

# Example for Redis
[[databases]]
name = "my_redis_cache"
type = "redis"
conn_string = "redis://127.0.0.1:6379/0" # Example Redis URL: redis://[<username>][:<password>@]<hostname>[:<port>][/<db_number>]

# Example for ScyllaDB
[[databases]]
name = "my_scylla_cluster"
type = "scylladb"
conn_string = "127.0.0.1:9042/my_keyspace" # Example ScyllaDB: <node_ip>[:<port>][/<keyspace_name>]
                                         # For multiple nodes, list them comma-separated: "node1:9042,node2:9042/my_keyspace"

# Example for OpenSearch
[[databases]]
name = "my_opensearch_service"
type = "opensearch"
conn_string = "http://localhost:9200" # Example OpenSearch URL: http(s)://<hostname>[:<port>]
                                      # For authenticated OpenSearch, include credentials in the URL if supported by your setup,
                                      # or ensure the OpenSearch client can pick up credentials from the environment.
